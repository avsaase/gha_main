name: rust-gh-direct-action
description: "Example of a composite GitHub Action that builds and runs Rust code"

inputs:
  number:
    description: "Number to parse to a u32"
    required: true
    default: "0"

outputs:
  error:
    description: "The error if parsing failed"
    value: ${{ steps.run.outputs.error }}
  parsed_u32:
    description: "Input parsed to u32 if parsing succeeded"
    value: ${{ steps.run.outputs.parsed_u32 }}
  multiline_string:
    description: A multiline string
    value: ${{ steps.run.outputs.multiline_string }}

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache executable
      id: cache-executable
      uses: actions/cache@v3
      with:
        path: |
          example-actions/direct/target/release/rust-gh-action
        key: cache-rust-gh-action-${{ hashFiles('example-actions/direct/src/**', 'example-actions/direct/Cargo.toml', 'example-actions/direct/Cargo.lock') }}

    - name: Install toolchain
      if: steps.cache-executable.outputs.cache-hit != 'true'
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build code
      if: steps.cache-executable.outputs.cache-hit != 'true'
      run: |
        cd example-actions/direct
        CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release
      shell: bash

    # - name: Cache dependencies
    #   uses: Swatinem/rust-cache@v2

    - name: Run code
      id: run
      run: example-actions/direct/target/release/rust-gh-action  ${{ inputs.number }}
      shell: bash
